version: '2'
networks:
  snipe:
    driver: bridge

volumes:
  snipe_mysql:
  snipe_html:
  phpmyadmin_html:
  portainer_data:

services:
#===============================================================================#
# Snipe-IT                                                                      #
# This container simply builds the Laravel application and stores it in the     #
# snipe_html docker volume, so the Nginx and PHP containers can access it       #
#===============================================================================#
  snipe:
    container_name: snipeit
    build:
      context: snipe/
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${SNIPE_DB}
      MYSQL_USER: ${SNIPE_DB_USER}
      MYSQL_PASSWORD: ${SNIPE_DB_PASS}
    networks:
      - snipe
    volumes:
      - snipe_html:/var/www/html

#===============================================================================#
# MariaDB                                                                       #
#===============================================================================#
  snipedb:
    container_name: snipedb
    image: mariadb:10.3.8-bionic
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${SNIPE_DB}
      MYSQL_USER: ${SNIPE_DB_USER}
      MYSQL_PASSWORD: ${SNIPE_DB_PASS}
    networks:
      - snipe
    volumes:
      - ./snipedb/sql/:/docker-entrypoint-initdb.d/:ro
      - snipe_mysql:/var/lib/mysql

#===============================================================================#
# NGinx to serve the snipe website at https://yourhost/                         #
# and phpmyadmin at https://yourhost/pma                                        #
#===============================================================================#
  nginx:
    container_name: nginx
    build:
      context: nginx/
      args:
        HTTP_PORT: ${NGINX_HTTP_PORT}
        HTTPS_PORT: ${NGINX_HTTPS_PORT}
        DNS_NAME: ${DNS_NAME}
    restart: unless-stopped
    volumes:
      - ./opt/:/etc/nginx/certs:ro
      - snipe_html:/var/www/html
      - phpmyadmin_html:/var/www/phpmyadmin
    ports:
      - ${NGINX_HTTP_PORT}:${NGINX_HTTP_PORT}
      - ${NGINX_HTTPS_PORT}:${NGINX_HTTPS_PORT}
    networks:
      - snipe
    depends_on:
      - php
      - snipedb

  php:
    container_name: php
    build:
      context: php/
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - snipe
    links:
      - snipedb
    volumes:
      - snipe_html:/var/www/html
      - phpmyadmin_html:/var/www/phpmyadmin:ro
    environment:
      APP_URL: https://${DNS_NAME}/
      DB_CONNECTION: mysql
      DB_HOST: snipedb
      DB_PORT: 3306
      DB_DATABASE: ${SNIPE_DB}
      DB_USERNAME: ${SNIPE_DB_USER}
      DB_PASSWORD: ${SNIPE_DB_PASS}

#===============================================================================#
# Container Management Application                                              #
#===============================================================================#
  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: unless-stopped
    ports:
      - "9000:9000"
    command: -H unix:///var/run/docker.sock
#    command: --admin-password "$$2y$$05$$arC5e4UbRPxfR68jaFnAAe1aL7C1U03pqfyQh49/9lB9lqFxLfBqS"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - snipe

#===============================================================================#
# PHPMyAdmin Build Container                                                    #
# This container runs once just to download and install phpmyadmin and its      #
# dependencies - it can be combined with the snipe container eventually         #
#===============================================================================#
  phpmyadmin:
      container_name: phpmyadmin
      build:
        context: phpmyadmin/
        dockerfile: Dockerfile
      volumes:
        - phpmyadmin_html:/var/www/phpmyadmin:ro